name: Pipeline

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - uses: actions/checkout@v3

      - name: "‚öôÔ∏è Set up JDK 17"
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

#      - name: "üõ† Run tests"
#        run: mvn -B test
#
#      - name: "‚úÖ Generate JaCoCo Badge"
#        id: jacoco
#        uses: cicirello/jacoco-badge-generator@v2
#        with:
#          generate-branches-badge: true
#          jacoco-csv-file: "**/jacoco.csv"
#
#      - name: "üìù Log coverage percentage"
#        run: |
#          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
#          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
#
#      - name: "‚úîÔ∏è Commit the badge (if it changed)"
#        run: |
#          if [[ `git status --porcelain` ]]; then
#          git config --global user.name 'YOUR NAME HERE'
#          git config --global user.email 'YOUR-GITHUB-USERID@users.noreply.github.com'
#          git add -A
#          git commit -m "Autogenerated JaCoCo coverage badge"
#          git push
#          fi
#
#      - name: "‚òëÔ∏è Code analisys"
#        run: mvn clean install -e sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=michel-dos-santos_lanchonete-do-bairro-postech-fiap -Dsonar.organization=michel-dos-santos

  cd:
    runs-on: ubuntu-latest
    environment: DEV
    needs: ci
    steps:
      - uses: actions/checkout@v3

      - name: "‚öôÔ∏è Set up JDK 17"
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: "‚åõ Extract branch name"
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

#     - name: "üêã Docker login"
#       uses: docker/login-action@v3.0.0
#       with:
#         username: ${{ secrets.DOCKER_USER }}
#         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

#     - name: "üñºÔ∏è Build docker image adapter-rest-fast-food"
#       run: |
#         docker build . --file adapter-rest/Dockerfile --tag ${{ secrets.DOCKER_USER }}/adapter-rest-fast-food:${{ steps.extract_branch.outputs.branch }}

#     - name: "üöÄ Docker push adapter-rest-fast-food"
#       run: |
#         docker push ${{ secrets.DOCKER_USER }}/adapter-rest-fast-food:${{ steps.extract_branch.outputs.branch }}

#     - name: "üñºÔ∏è Build docker image adapter-consumer-billing-fast-food"
#       run: |
#         docker build . --file adapter-consumer-billing/Dockerfile --tag ${{ secrets.DOCKER_USER }}/adapter-consumer-billing-fast-food:${{ steps.extract_branch.outputs.branch }}

#     - name: "üöÄ Docker push adapter-consumer-billing-fast-food"
#       run: |
#         docker push ${{ secrets.DOCKER_USER }}/adapter-consumer-billing-fast-food:${{ steps.extract_branch.outputs.branch }}

      - name: "Configure AWS credentials"
        if: ${{ contains(github.ref, 'develop') }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Update kube config"
        if: ${{ contains(github.ref, 'develop') }}
        run: |
          aws eks update-kubeconfig --name lanchonete-do-bairro-eks-cluster --region ${{ secrets.AWS_REGION }}

      - name: "Checkout ymls infra"
        if: ${{ contains(github.ref, 'develop') }}
        uses: actions/checkout@v3
        with:
          repository: michel-dos-santos/lanchonete-do-bairro.infra-k8s
          path: './infra'

      - name: "Deploy image to Amazon EKS"
        if: ${{ contains(github.ref, 'develop') }}
        run: |
          kubectl apply -f ./infra/src/k8s --validate=false








 #
 # unit-tests:
 #   uses: ./.github/workflows/unit-tests.yml
 # code-analisys:
 #   needs: unit-tests
 #   uses: ./.github/workflows/code-analisys.yml
 #   secrets: inherit
 # build:
 #   needs: code-analisys
 #   uses: ./.github/workflows/build.yml
 #   secrets: inherit
 # publish-docker-feature:
 #   needs: build
 #   if: ${{ contains(github.ref, 'feature') }}
 #   uses: ./.github/workflows/publish-docker-feature.yml
 #   secrets: inherit
 # publish-docker-develop:
 #   needs: build
 #   if: ${{ contains(github.ref, 'develop') }}
 #   uses: ./.github/workflows/publish-docker-develop.yml
 #   secrets: inherit
 # publish-docker-hotfix:
 #   needs: build
 #   if: ${{ contains(github.ref, 'hotfix') }}
 #   uses: ./.github/workflows/publish-docker-hotfix.yml
 #   secrets: inherit
 # publish-docker-release:
 #   needs: build
 #   if: ${{ contains(github.ref, 'release') }}
 #   uses: ./.github/workflows/publish-docker-release.yml
 #   secrets: inherit
 # publish-docker-master:
 #   needs: build
 #   if: ${{ contains(github.ref, 'master') }}
 #   uses: ./.github/workflows/publish-docker-master.yml
 #   secrets: inherit
 # deploy:
 #   needs: [publish-docker-feature, publish-docker-develop, publish-docker-hotfix, publish-docker-release, publish-docker-master]
 #   if: ${{ always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure') }}
 #   uses: ./.github/workflows/deploy.yml
 #   secrets: inherit